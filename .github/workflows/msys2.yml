name: msys2
on:
  workflow_dispatch:
jobs:
  MSYS2:
    strategy:
      fail-fast: false
      matrix:
        include: [
          { triple: x64, sys: UCRT64 },
          { triple: x64, sys: MINGW64 },
          { triple: x86, sys: MINGW32 },
          { triple: x64, sys: CLANG64 },
          { triple: x86, sys: CLANG32 },
        ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true
      - uses: msys2/setup-msys2@v2
        with:
          cache: false
          location: D:\
          path-type: strict
          msystem: ${{ matrix.sys }}
          pacboy: >-
            toolchain:p
            cmake:p
            ninja:p
            lua:p
            rust:p
            cython:p
            python:p
            python-pip:p
            python-setuptools:p
      - name: Run debug
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: strict
          MSYSTEM: ${{ matrix.sys }}
        run: env
      - name: Run cmake
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: strict
          MSYSTEM: ${{ matrix.sys }}
        run: |
          set -x
          cmake -S . -B build -G Ninja -DPython_ROOT_DIR=D:/msys64/${{ matrix.sys }} \
            -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/_ \
            -DBUILD_TESTING=1 \
            -DLIBA_WARNINGS=1 \
            -DLIBA_ANALYZER=1 \
            -DLIBA_PYTHON=1 \
            -DLIBA_VCPKG=1 \
            -DLIBA_JAVA=1 \
            -DLIBA_LUA=1
      - name: Run ninja
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: strict
          MSYSTEM: ${{ matrix.sys }}
          LIBA_OPENMP: ${{ !startsWith(matrix.sys, 'CLANG') }}
        run: |
          set -x
          cmake --build build --target package
      - name: Run ctest
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: strict
          MSYSTEM: ${{ matrix.sys }}
          CTEST_OUTPUT_ON_FAILURE: 1
        run: |
          set -x
          cmake --build build --target test
      - name: Run vcpkg
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: strict
          MSYSTEM: ${{ matrix.sys }}
        run: |
          set -x
          cp -r build/vcpkg/* $VCPKG_INSTALLATION_ROOT
          $VCPKG_INSTALLATION_ROOT/vcpkg install liba[ipo,pkgconfig]:${{ matrix.triple }}-mingw-static
          $VCPKG_INSTALLATION_ROOT/vcpkg install liba[ipo,pkgconfig]:${{ matrix.triple }}-mingw-dynamic
      - name: Run demo
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: strict
          MSYSTEM: ${{ matrix.sys }}
          CMAKE_PREFIX_PATH: ${{ github.workspace }}/_
        run: |
          set -x
          cmake --build build --config RelWithDebInfo --target install
          cmake -S demo -B demo/build
          cmake --build demo/build
