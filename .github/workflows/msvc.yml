name: msvc
on:
  workflow_dispatch:
jobs:
  MSVC:
    strategy:
      fail-fast: false
      matrix:
        include: [
          { triple: x64, arch: x64, type: Debug },
          { triple: x86, arch: win32, type: Debug },
          { triple: x64, arch: x64, type: RelWithDebInfo },
          { triple: x86, arch: win32, type: RelWithDebInfo },
          { triple: arm64, arch: ARM64, type: RelWithDebInfo },
        ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true
      - name: Run setup
        run: |
          choco install ninja
          python -m venv venv
          venv/Scripts/Activate.ps1
          python -m pip install -r requirements.txt
          Get-ChildItem Env: | Sort Name
      - name: Run cmake
        env:
          LIBA_OPENMP: 1
        run: |
          venv/Scripts/Activate.ps1
          Set-PSDebug -Trace 1
          cmake -S . -B build -A ${{ matrix.arch }} `
            -DBUILD_TESTING=1 `
            -DLIBA_WARNINGS=1 `
            -DLIBA_ANALYZER=1 `
            -DLIBA_SANITIZE=1 `
            -DLIBA_WITH_LUA=1 `
            -DLIBA_PYTHON=1 `
            -DLIBA_VCPKG=1 `
            -DLIBA_JAVA=1
          cmake --build build --config ${{ matrix.type }} --target package -- -noLogo
      - name: Run vcpkg
        if: ${{ matrix.type != 'Debug' }}
        run: |
          Set-PSDebug -Trace 1
          cp -r -Force build/vcpkg/* $ENV:VCPKG_INSTALLATION_ROOT
          vcpkg install liba[ipo,pkgconfig]:${{ matrix.triple }}-windows
          vcpkg install liba[ipo,pkgconfig]:${{ matrix.triple }}-windows-static
      - name: Run ctest
        if: ${{ startsWith(matrix.triple, 'x') }}
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: |
          Set-PSDebug -Trace 1
          cmake --build build --config ${{ matrix.type }} --target run_tests -- -noLogo
      - uses: mymindstorm/setup-emsdk@v13
        if: ${{ matrix.arch == 'x64' }}
      - name: Run cmake
        if: ${{ matrix.arch == 'x64' }}
        env:
          LIBA_OPENMP: 1
        run: |
          venv/Scripts/Activate.ps1
          Set-PSDebug -Trace 1
          cmake -S . -B build.llvm -G "Ninja Multi-Config" --toolchain cmake/UseClang.cmake `
            -DBUILD_TESTING=1 `
            -DLIBA_WARNINGS=1 `
            -DLIBA_JAVASCRIPT=1 `
            -DLIBA_JAVASCRIPT_BIGINT=1 `
            -DLIBA_JAVASCRIPT_DEBUG=1 `
            -DLIBA_JAVASCRIPT_TSGEN=1 `
            -DLIBA_WITH_LUA=1 `
            -DLIBA_PYTHON=1 `
            -DLIBA_VCPKG=1 `
            -DLIBA_JAVA=1
          cmake --build build.llvm --config ${{ matrix.type }} --target package
      - name: Run ctest
        if: ${{ matrix.arch == 'x64' }}
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: |
          Set-PSDebug -Trace 1
          cmake --build build.llvm --config ${{ matrix.type }} --target test
